name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_VERSION: '20'

jobs:
  # ðŸ§ª Lint & Build
  build:
    name: Lint and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint --if-present

      - name: Build project
        run: npm run build

      - name: Upload production-ready build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist

  # ðŸš€ Deploy to Staging (develop)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist

      - name: Deploy to Staging
        run: |
          echo "ðŸš€ Deploying to STAGING..."
          # Example command:
          # scp -r dist/* ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }}:/var/www/staging

  # ðŸš€ Deploy to Production (main)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist

      - name: Deploy to Production
        run: |
          echo "ðŸš€ Deploying to PRODUCTION..."
          # Example command:
          # scp -r dist/* ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:/var/www/production
